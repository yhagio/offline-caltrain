function textFileToJSON(e){for(var t=e.split("\n"),a=[],r=t[0].split(","),o=1;o<t.length;o++){for(var n={},s=t[o].split(","),i=0;i<r.length;i++)n[r[i]]=s[i];a.push(n)}return a}function removeQuotations(e){return e.startsWith('"')?e.slice(1,e.length-1):e}function whatDayIsToday(e){switch(e.getDay()){case 0:return"sunday";case 1:return"monday";case 2:return"tuesday";case 3:return"wednesday";case 4:return"thursday";case 5:return"friday";case 6:return"saturday"}}function formatDate(e){var t="",a="",r=e.getFullYear().toString();return t=e.getMonth()<9?"0"+parseInt(e.getMonth()+1).toString():parseInt(e.getMonth()+1).toString(),a=e.getDate()<10?"0"+e.getDate():e.getDate().toString(),r+t+a}function displayStopsSelection(e){return e.forEach(function(e){$("#departure-stop").append('<option value="'+e.stop_name+'">'+e.stop_name+"</option>"),$("#arrival-stop").append('<option value="'+e.stop_name+'">'+e.stop_name+"</option>")})}function displayResultList(e,t,a){for(var r=[],o=null,n=null,s={},i=0;e.length>i;i++)e[i].stops.stop_name!==t?(n=e[i].stop_times,o&&n&&o.trip_id===n.trip_id&&o.departure_time<n.arrival_time&&(s={departure:o.departure_time,arrival:n.arrival_time,duration:getDuration(o.departure_time,n.arrival_time)},r.push(s),o=null,s=null)):o=e[i].stop_times;r.length>0?($("#result").addClass("show"),r.sort(sortSchedules).forEach(function(e){$("#search-result").append("<tr><td>"+e.departure+"</td><td>"+e.arrival+"</td><td>"+e.duration+"</td></tr>")})):($("#result").hasClass("show")&&$("#result").removeClass("show"),$("#noresult").addClass("show"))}function getDuration(e,t){var a=hhmmssToSeconds(e),r=hhmmssToSeconds(t),o=(r-a)/60;return o.toString()+" min"}function sortSchedules(e,t){return hhmmssToSeconds(e.departure)>hhmmssToSeconds(t.departure)?1:hhmmssToSeconds(e.departure)<hhmmssToSeconds(t.departure)?-1:0}function hhmmssToSeconds(e){var t=e.split(":"),a=parseInt(t[0]),r=parseInt(t[1]),o=parseInt(t[2]);return 60*a*60+60*r+o}function resetDisplay(){$("#search-result").empty(),$("#error").empty(),$("#noresult").hasClass("show")&&$("#noresult").removeClass("show")}function displayError(){$("#error").append('<p class="error-msg">Arrival station must be different</p>'),$("#search-result").empty(),$("#noresult").hasClass("show")&&$("#noresult").removeClass("show")}navigator.serviceWorker?navigator.serviceWorker.register("/sw.js",{scope:"/"}).then(function(e){console.log("Registered service worker")})["catch"](function(e){console.error("Error on registering service worker:\n",e)}):console.log("Service Worker is not supported in this browser.");var CaltrainData=function(){this.db=null,window.CT=this};CaltrainData.prototype.getDBConnection=function(){var e=this;if(null!=this.db)return this.db;var t={storeType:lf.schema.DataStoreType.INDEXED_DB};return e.buildSchema().connect(t).then(function(t){return e.db=t,e.onConnected(),e.insertData(),t})},CaltrainData.prototype.onConnected=function(){this.calendar=this.db.getSchema().table("calendar"),this.calendar_dates=this.db.getSchema().table("calendar_dates"),this.routes=this.db.getSchema().table("routes"),this.stop_times=this.db.getSchema().table("stop_times"),this.stops=this.db.getSchema().table("stops"),this.trips=this.db.getSchema().table("trips"),console.log("DB connection established")},CaltrainData.prototype.buildSchema=function(){var e=lf.schema.create("caltrain",1);return e.createTable("calendar").addColumn("service_id",lf.Type.STRING).addColumn("monday",lf.Type.INTEGER).addColumn("tuesday",lf.Type.INTEGER).addColumn("wednesday",lf.Type.INTEGER).addColumn("thursday",lf.Type.INTEGER).addColumn("friday",lf.Type.INTEGER).addColumn("saturday",lf.Type.INTEGER).addColumn("sunday",lf.Type.INTEGER).addColumn("start_date",lf.Type.STRING).addColumn("end_date",lf.Type.STRING).addPrimaryKey(["service_id"]),e.createTable("calendar_dates").addColumn("service_id",lf.Type.STRING).addColumn("date",lf.Type.STRING).addColumn("exception_type",lf.Type.INTEGER).addPrimaryKey(["service_id"]),e.createTable("routes").addColumn("route_id",lf.Type.STRING).addColumn("route_short_name",lf.Type.STRING).addColumn("route_long_name",lf.Type.STRING).addColumn("route_type",lf.Type.INTEGER).addColumn("route_color",lf.Type.STRING).addPrimaryKey(["route_id"]),e.createTable("stop_times").addColumn("trip_id",lf.Type.STRING).addColumn("arrival_time",lf.Type.STRING).addColumn("departure_time",lf.Type.STRING).addColumn("stop_id",lf.Type.STRING).addColumn("stop_sequence",lf.Type.INTEGER).addColumn("pickup_type",lf.Type.INTEGER).addColumn("drop_off_type",lf.Type.INTEGER).addPrimaryKey(["stop_id","trip_id"]),e.createTable("stops").addColumn("stop_id",lf.Type.STRING).addColumn("stop_code",lf.Type.STRING).addColumn("stop_name",lf.Type.STRING).addColumn("stop_lat",lf.Type.STRING).addColumn("stop_lon",lf.Type.STRING).addColumn("zone_id",lf.Type.STRING).addColumn("stop_url",lf.Type.STRING).addColumn("location_type",lf.Type.INTEGER).addColumn("parent_station",lf.Type.STRING).addColumn("platform_code",lf.Type.STRING).addColumn("wheelchair_boarding",lf.Type.INTEGER).addPrimaryKey(["stop_id"]),e.createTable("trips").addColumn("route_id",lf.Type.STRING).addColumn("service_id",lf.Type.STRING).addColumn("trip_id",lf.Type.STRING).addColumn("trip_headsign",lf.Type.STRING).addColumn("trip_short_name",lf.Type.INTEGER).addColumn("direction_id",lf.Type.INTEGER).addColumn("shape_id",lf.Type.STRING).addColumn("wheelchair_accessible",lf.Type.INTEGER).addColumn("bikes_allowed",lf.Type.INTEGER).addPrimaryKey(["route_id","service_id","trip_id"]),console.log("Schema created"),e},CaltrainData.prototype.insertData=function(){var e=this,t=["calendar","calendar_dates","stop_times","stops","trips"],a=null;t.forEach(function(t,r){a="../gtfs/"+t+".txt";var o=e.db.getSchema().table(t);fetch(a).then(function(e){return e.text()}).then(function(a){e.importFromTxtToDB(o,a).then(function(){console.log(t+" has been imported!")})["catch"](function(e){console.log(t+" is not imported. "+e)})})["catch"](function(e){console.log("Error(insertData):\n",e)})})},CaltrainData.prototype.importFromTxtToDB=function(e,t){for(var a=t.split(/\r\n/),r=a[0].split(","),o=[],n=1;n<a.length;n++)if(0!==a[n].length){for(var s={},i=a[n].split(","),d=0;d<r.length;d++){var l=i[d].trim();s[r[d]]=removeQuotations(l)}o.push(e.createRow(s))}return this.db.insertOrReplace().into(e).values(o).exec()},CaltrainData.prototype.retrieveStops=function(){return this.db.select(lf.fn.distinct(this.stops.stop_name).as("stop_name")).from(this.stops).orderBy(this.stops.stop_name).exec()},CaltrainData.prototype.searchSchedule=function(e,t){var a=this.stops,r=this.stop_times,o=this.trips,n=this.calendar_dates,s=this.calendar,i=new Date,d=formatDate(i),l=whatDayIsToday(i);return this.db.select(r.trip_id,r.stop_id,r.departure_time,r.arrival_time,a.stop_name).from(a,r,o,s,n).where(lf.op.and(a.stop_id.eq(r.stop_id),r.trip_id.eq(o.trip_id),a.stop_name["in"]([e,t]),s.start_date.lte(d),s.end_date.gte(d),s[l].eq(1),n.exception_type.neq(2),o.service_id.eq(n.service_id))).orderBy(r.departure_time).exec()};var CT=new CaltrainData;CT.getDBConnection().then(function(e){console.log("Database connected & Schema creation done successfully"),setTimeout(function(){CT.retrieveStops().then(function(e){displayStopsSelection(e)})["catch"](function(e){console.log("stops retrieving errors: ",e)})},200),$("#find-btn").click(function(e){resetDisplay();var t=$("#departure-stop").val(),a=$("#arrival-stop").val();return t===a?void displayError():void CT.searchSchedule(t,a).then(function(e){displayResultList(e,t,a)})})});